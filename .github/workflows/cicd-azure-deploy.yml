name: CICD for Vite Build and Deploy for Node Web App to Azure

on:
  workflow_dispatch:
#   push:
#     branches:
#       - main

defaults:
  run:
    working-directory: ./hello-world

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./hello-world/dist
          if-no-files-found: error

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: dev  # set dev environment â€“ configure protection rules in repo settings if needed
    steps:
      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - name: Azure Login for Dev
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure Web App Dev
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'vite-node-web-app-dev'
          package: ./dist
          startup-command: 'pm2 serve /home/site/wwwroot --no-daemon --spa'


  deploy-test:
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: test  # set test environment; add manual approval protection via GitHub Environments settings
    steps:
      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - name: Azure Login for Test
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Deploy to Azure Web App Test
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'vite-node-web-app-test'
          package: ./dist
          startup-command: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
